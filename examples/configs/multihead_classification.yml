task:
  name: MultiHeadClassificationTask
  params:
    backbone_name: efficientnet_b0
    backbone_params:
      in_chans: &num_channels 3
      pretrained: true
    pooling_name: PoolingLinear
    pooling_params:
      out_features: 512
    heads:
      - type: ClassificationHead
        name: classification
        target: face_label
        params:
          num_classes: &num_classes 5749
      - type: ArcMarginHead
        name: arcface
        target: face_label
        params:
          num_classes: *num_classes
          easy_margin: false
          margin: 0.5
          scale: 10

    input_size: [*num_channels, &height 128, &width 128]

#restore_path: None

loss:
  loss_list:
    - name: CrossEntropyLoss
      params:
        target_fields:
          target: target_face_label
          input: prediction_classification
    - name: CrossEntropyLoss
      params:
        target_fields:
          target: target_face_label
          input: prediction_arcface
  loss_weights: [1, 1]

optimizers:
  name: SGD
  params:
    lr: &initial_lr 0.1
    momentum: 0.9
    nesterov: true
    weight_decay: 0.00005

schedulers:
  name: OneCycleLR
  params:
    epochs: 20
    steps_per_epoch: 662
    max_lr: *initial_lr
    pct_start: 0.2
  aux_params:
    interval: 'step'

data:
  common_params:
    data_folder: "${SM_CHANNEL_TRAINING}"
    input_dtype: float32
    targets:
      - column: label
        name: face_label
        target_type: multilabel
        num_classes: *num_classes

  train_params:
    name: MultiHeadImageDataset
    dataloader_params: &dataloader_params
      batch_size: 20
      num_workers: 8
      shuffle: true
      drop_last: false
    params:
      path_to_datalist: "lfw_imgs.csv"

    transform:
      - &resize
        name: Resize
        params:
          height: *height
          width: *width
      - &normalize
        name: Normalize
        params:
          mean: [0.5, 0.5, 0.5]
          std: [0.5, 0.5, 0.5]
      - &totensor
        name: ToTensorV2
    augment:
      - name: ShiftScaleRotate
        params:
          border_mode: 4
          rotate_limit: 30
      - name: HorizontalFlip
      - name: RandomResizedCrop
        params:
          height: *height
          width: *width
          scale: [0.4, 1.0]
      - name: OneOf
        params:
          transforms:
            - name: ImageCompression
              params:
                quality_lower: 90
            - name: GaussNoise
      - name: RandomBrightnessContrast
        params:
          brightness_limit: [-0.2, 0.2]
          contrast_limit: [-0.2, 0.2]
      - name: HueSaturationValue
      - name: ToGray
        params:
          p: 0.1

  valid_params:
    name: MultiHeadImageDataset
    dataloader_params: *dataloader_params
    params:
      path_to_datalist: "lfw_imgs.csv"
    transform:
      - &longest_resize
        name: LongestMaxSize
        params:
          max_size: *height
          interpolation: 2
      - &pad
        name: PadIfNeeded
        params:
          min_height: *height
          min_width: *width
          border_mode: 0
          value: 255
          p: 1.0
      - *normalize
      - *totensor

  test_params:
    name: MultiHeadImageDataset
    dataloader_params: *dataloader_params
    params:
      test_mode: true
      path_to_datalist: "lfw_imgs.csv"
    transform:
      - *longest_resize
      - *pad
      - *normalize
      - *totensor

trainer:
  gpus: 1
  max_epochs: 20
  profiler: false
#  limit_train_batches: 10
  limit_val_batches: 10
  progress_bar_refresh_rate: 1
  check_val_every_n_epoch: 1
  precision: 32

experiment_name: &exp_name face_recognition
log_dir: &logdir '.logs'

#logger:
#  logger: mlflow
#  save_dir: "s3://{s3_bucket_path_name}"
#  tags:
#    mlflow.runName: "face_recognition"
#  secrets_manager:
#      region: "eu-west-1"
#      mlflow_secret: "acme/mlflow"
logger:
  logger: tensorboard
  log_graph: false

checkpoint:
  monitor: valid/loss
  save_last: true
  mode: min

metrics:
  - name: AccuracyMeter
    params:
      name: accuracy
      target_fields:
        target: target_face_label
        prediction: prediction_classification